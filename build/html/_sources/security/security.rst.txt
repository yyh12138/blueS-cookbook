Security Overview
==================

This guide provides an overview of the overall security features available in various solutions. 
It is highly recommended to consider this guide while designing the products with the platform software stack from the **security** perspective.

Goals
-----

High level security goals are as follows:

#. Preventing untrustworthy code from being executed
#. Protecting the identity and integrity of the code stored in the off-chip flash memory
#. Securing device identity
#. Secure storage for confidential data
#. Authenticated and encrypted communication from the device

Platform Security
-----------------

.. _secure_boot-guide:

Secure Boot
~~~~~~~~~~~

The Secure Boot feature ensures that only authenticated software can execute on the device. 
The Secure Boot process forms a chain of trust by verifying all **mutable** software entities involved in the application startup flow. Signature verification happens during both boot-up as well as in OTA updates.

.. important::

    It is highly recommended that Secure Boot be enabled on all production devices.

Secure Boot Best Practices
^^^^^^^^^^^^^^^^^^^^^^^^^^

* Generate the signing key on a system with a quality source of entropy.
* Always keep the signing key private. A leak of this key will compromise the Secure Boot system.
* Do not allow any third party to observe any aspects of the key generation or signing process. Both processes are vulnerable to timing or other side-channel attacks.
* Ensure that all security eFuses have been correctly programmed, including disabling of the debug interfaces, non-required boot mediums (e.g., UART DL mode), etc.


.. _flash_enc-guide:

Flash Encryption
~~~~~~~~~~~~~~~~

The Flash Encryption feature helps to encrypt the contents on the off-chip flash memory and thus provides the **confidentiality** aspect to the software or data stored in the flash memory.

Flash Encryption Best Practices
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* It is recommended to use flash Encryption release mode for the production use-cases.
* It is recommended to have a unique flash encryption key per device.
* Enable :ref:`secure_boot-guide` as an extra layer of protection, and to prevent an attacker from selectively corrupting any part of the flash before boot.

Network Security
----------------

BLE
~~~~

BLE is a low-power wireless communication protocol that is widely used in IoT devices. It provides a secure communication channel between devices, ensuring data integrity and confidentiality.


Product Security
----------------

Secure OTA (Over-the-air) Updates
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- OTA Updates must happen over secure transport, e.g., HTTPS.
- If :ref:`secure_boot-guide` is enabled, then the server should host the signed application image.
- If :ref:`flash_enc-guide` is enabled, then no additional steps are required on the server side, encryption shall be taken care on the device itself during flash write.
- OTA update :ref:`ota_rollback` can help to switch the application as ``active`` only after its functionality has been verified.

Anti-Rollback Protection
^^^^^^^^^^^^^^^^^^^^^^^^

Anti-rollback protection feature ensures that device only executes the application that meets the security version criteria as stored in its eFuse. So even though the application is trusted and signed by legitimate key, it may contain some revoked security feature or credential. Hence, device must reject any such application.

Encrypted Firmware Distribution
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Encrypted firmware distribution during over-the-air updates ensures that the application stays encrypted **in transit** from the server to the the device. This can act as an additional layer of protection on top of the TLS communication during OTA updates and protect the identity of the application.

Secure Storage
~~~~~~~~~~~~~~

Secure storage refers to the application-specific data that can be stored in a secure manner on the device, i.e., off-chip flash memory. This is typically a read-write flash partition and holds device specific configuration data.

Security Policy
---------------

Advisories
~~~~~~~~~~

- Espressif publishes critical `Security Advisories`_, which includes security advisories regarding both hardware and software.

Software Updates
~~~~~~~~~~~~~~~~

Critical security issues in the components, and third-party libraries are fixed as and when we find them or when they are reported to us. Gradually, we make the fixes available in all applicable release branches.

Applicable security issues and CVEs, third-party libraries are mentioned in the release notes.